(function(exports,require,module,__filename,__dirname){let express=require("express");let bodyParser=require("body-parser");let path=require("path");let fs=require("fs");let{exec}=require("child_process");let os=require("os");let app=express();let PORT=process.env.PORT||3030;app.use(bodyParser.urlencoded({extended:true}));app.use(bodyParser.json());app.use(express.static("public"));app.set("view engine","ejs");app.set("views",path.join(__dirname,"views"));app.get("/",(req,res)=>{res.render("index",{title:"Node.js Security Demo with Contrast",timestamp:new Date().toISOString()})});app.get("/api/info",(req,res)=>{let info={timestamp:new Date().toISOString(),platform:os.platform(),nodejs_version:process.version,architecture:os.arch(),hostname:os.hostname(),uptime:os.uptime(),memory:{total:ContrastMethods.add(Math.round(os.totalmem()/1024/1024)," MB"),free:ContrastMethods.add(Math.round(os.freemem()/1024/1024)," MB")},environment_vars:{NODE_ENV:process.env.NODE_ENV||"Not set",PATH:process.env.PATH?process.env.PATH.split(":").slice(0,5):[],CONTRAST_URL:process.env.CONTRAST_URL||"Not configured"}};res.json(info)});app.get("/api/hello/:name?",(req,res)=>{let name=req.params.name||"World";let response={message:ContrastMethods.tag`Hello, ${name}!`,timestamp:new Date().toISOString(),visitor:name};res.json(response)});app.get("/health",(req,res)=>{let health={status:"healthy",timestamp:new Date().toISOString(),app:"Node.js Demo App",uptime:process.uptime()};res.json(health)});app.get("/vulnerable/file-read",(req,res)=>{let filename=req.query.filename||"package.json";console.log(ContrastMethods.tag`[DEBUG] file-read endpoint called with filename: '${filename}' (length: ${filename?.length||0})`);try{let filePath;if(filename.startsWith("/"))filePath=filename;else{let appFilePath=path.join("/demos/node-app",filename);let demosFilePath=path.join("/demos",filename);filePath=fs.existsSync(appFilePath)?appFilePath:fs.existsSync(demosFilePath)?demosFilePath:appFilePath}console.log(ContrastMethods.tag`[DEBUG] Attempting to read file: '${filePath}'`);let content=fs.readFileSync(filePath,"utf8");res.json({filename:filename,content:content,warning:"This endpoint has a path traversal vulnerability for demo purposes"})}catch(error){res.status(400).json({error:error.message,filename:filename,warning:"This endpoint has a path traversal vulnerability for demo purposes"})}});app.get("/vulnerable/command",(req,res)=>{let cmd=req.query.cmd||"";console.log(ContrastMethods.tag`[DEBUG] command endpoint called with cmd: '${cmd}' (length: ${cmd?.length||0})`);if(!cmd)return res.status(400).json({error:"No command provided in 'cmd' parameter",warning:"This endpoint has a command injection vulnerability for demo purposes"});try{exec(cmd,{timeout:1e4},(error,stdout,stderr)=>{if(error)return res.status(400).json({error:error.message,command:cmd,warning:"This endpoint has a command injection vulnerability for demo purposes"});res.json({command:cmd,stdout:stdout,stderr:stderr,warning:"This endpoint has a command injection vulnerability for demo purposes"})})}catch(error){res.status(400).json({error:error.message,command:cmd,warning:"This endpoint has a command injection vulnerability for demo purposes"})}});app.get("/vulnerable/ping",(req,res)=>{let host=req.query.host||"localhost";console.log(ContrastMethods.tag`[DEBUG] ping endpoint called with host: '${host}' (length: ${host?.length||0})`);try{let command=ContrastMethods.tag`ping -c 4 ${host}`;exec(command,{timeout:15e3},(error,stdout,stderr)=>{res.json({host:host,command:command,output:stdout,error:stderr||(error?error.message:null),warning:"This endpoint has a command injection vulnerability for demo purposes"})})}catch(error){res.status(400).json({error:error.message,host:host,warning:"This endpoint has a command injection vulnerability for demo purposes"})}});app.get("/contrast",(req,res)=>{let contrastInfo={agent:"Contrast Node.js Agent",version:"4.5.0",mode:["Assess","Inventory"],status:"Active",teamserver:process.env.CONTRAST_URL||"Not configured",features:["Real-time vulnerability detection","Runtime application security monitoring","Code-level security insights","Attack detection and blocking"],documentation:"https://docs.contrastsecurity.com"};res.json(contrastInfo)});app.get("/contrast-info",(req,res)=>{res.render("contrast",{title:"Contrast Security Information"})});app.get("/debug/files",(req,res)=>{let info={current_directory:process.cwd(),views_exist:fs.existsSync("views"),index_view_exists:fs.existsSync("views/index.ejs"),contrast_view_exists:fs.existsSync("views/contrast.ejs"),package_json_exists:fs.existsSync("package.json"),files_in_current_dir:fs.readdirSync(".").slice(0,10)};res.json(info)});app.listen(PORT,"0.0.0.0",()=>{console.log(ContrastMethods.tag`🚀 Starting Node.js app on port ${PORT}`);console.log(ContrastMethods.tag`🌐 Access the app at: http://localhost:${PORT}`);console.log(ContrastMethods.tag`📊 Health check: http://localhost:${PORT}/health`);console.log(ContrastMethods.tag`🔧 System info API: http://localhost:${PORT}/api/info`);console.log(ContrastMethods.tag`⚠️ Vulnerability testing available on home page`);console.log(ContrastMethods.tag`🔄 View updated at: ${new Date}`)})}).apply(this,arguments);